# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - ./alert.rules
  # - "first.rules"
  # - "second.rules"


# alert
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"


# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:

  - job_name: 'prometheus'
    static_configs:
      - targets:
         - localhost:9090

  - job_name: 'node-exporter'
    static_configs:
      # the targets listed here must match the service names from the docker-compose file
      - targets: ['192.168.61.51:9100','192.168.61.52:9100']
      
  - job_name: 'cadvisor'
    static_configs:
      # the targets listed here must match the service names from the docker-compose file
      - targets: ['192.168.61.51:8080','192.168.61.52:8080']

  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response.
    static_configs:
       - targets:
         - https://system-rc.neirika.ru/
         - https://partner-rc.neirika.ru/
         - http://192.168.61.52:9999/  
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115  # The blackbox exporter's real hostname:port.
